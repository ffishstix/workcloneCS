@startuml

'config
hide methods
hide attributes


'init
class Program
class SQL
class firstRun
class FirstRunWindow
class Form1
class NameForm
class TableForm
class tableNumberForm
class Logger
class sync
class ConnectionSettingsValidator
class AbstractValidator<ConnectionSettings>
class table
class item
class staff
class catagory
class rowOfItem
class ConnectionSettings


Program ..> SQL : «initializes»
Program ..> firstRun : «checks»
Program ..> FirstRunWindow : «creates if first run»
Program ..> Form1 : «creates if not first run»
Program ..> sync : «uses»

note right of Program
  Main flow:
  1. Initialize SQL
  2. Check if first run
  3. If first run: Show FirstRunWindow
  4. If not first run:
     - Initialize app config
     - Get sync files
     - Run main Form1
end note

' Add inheritance relationship
tableNumberForm --|> Form

' Add usage relationships
Form1 ..> tableNumberForm : «uses»
TableForm ..> tableNumberForm : «uses»



' Add Form inheritance relationships
Form1 --|> Form
TableForm --|> Form
FirstRunWindow --|> Form
NameForm --|> Form

' Other relationships stay the same
Form1 "1" *-- "1" table : tableSelected
Form1 "1" *-- "1" staff : currentStaff
Form1 "1" *-- "*" catagory : cat
Form1 "1" *-- "*" item : itemsToBeOrdered
Form1 ..> rowOfItem : «uses»
Form1 ..> NameForm : «uses»
Form1 ..> TableForm : «uses»
table "1" *-- "1" staff : openStaff
table "1" *-- "*" item : ordered
table "1" *-- "*" item : itemsToOrder
catagory "1" *-- "*" item : items
NameForm "1" *-- "*" staff : x
NameForm "1" *-- "1" staff : staffSelected
FirstRunWindow "1" *-- "1" ConnectionSettingsValidator : _validator
FirstRunWindow ..> firstRun : uses
ConnectionSettingsValidator --|> "AbstractValidator<ConnectionSettings>" : extends
ConnectionSettingsValidator "1" -- "1" ConnectionSettings : validates

note right of firstRun
  Static utility class for
  first run operations
end note

note right of ConnectionSettingsValidator
  FluentValidation validator
  for connection settings
end note

' Update inheritance
rowOfItem --|> item

' Add relationships
SQL ..> catagory : «uses»
SQL ..> staff : «uses»
SQL ..> table : «uses»
SQL ..> item : «uses»



' Add sync relationships
sync ..> SQL : «uses»
sync ..> Logger : «uses»
sync "1" *-- "*" staff : allStaff
sync "1" *-- "*" catagory : catagories
Program ..> sync : «uses»

note right of sync
  Static utility class for
  synchronization operations
  with database and files
end note



' Update Logger relationships
Program ..> Logger : «uses»
Form1 ..> Logger : «uses»
TableForm ..> Logger : «uses»
FirstRunWindow ..> Logger : «uses»
SQL ..> Logger : «uses»
sync ..> Logger : «uses»

note right of Logger
  Static logging utility
  Thread-safe logging with:
  - Timestamped entries
  - Sequential numbering
  - File & console output
end note

' Update sync's relationships
sync ..> Logger : «uses»
SQL ..> Logger : «uses»

' Update SQL's properties and relationships


' Add circular dependency between SQL and sync
SQL ..> sync : «uses»
sync ..> SQL : «uses»

' Add note about circular dependency
note "Circular dependency:\nSQL uses sync for staff list\nsync uses SQL for data operations" as N1
SQL .. N1
sync .. N1

' Update Program relationships
Program ..> Logger : «uses»

' Add validation flow
note right of ConnectionSettingsValidator
  Validates connection settings:
  - IP/Host format
  - Port range (1-65535)
  - Database name format
  - Username format
  - Password requirements
end note


@enduml